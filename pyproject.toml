[build-system]
requires = ["setuptools>=42", "wheel", "setuptools_scm[toml]>=3.4"]

[tool.coverage.report]
exclude_also = [
    # From coverage manual (https://coverage.readthedocs.io/en/latest/excluding.html).
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",

    # OUR EXCEPTIONS:
    "except ImportError:",
    "pytest.fail\\(", # Parameter checks in pytest.
    "raise TypeError\\(", # "Impossible" errors.
]

[tool.coverage.run]
branch = true
omit = [
    "datacube_alchemist/_version.py",
    "tests/*",
]

[tool.pytest.ini_options]
addopts = "--cov=datacube_alchemist"
norecursedirs = [".*", "build", "dist", "tmp*"]

[tool.ruff.lint]
select = [
    "A",  # Don't shadow built-ins
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "D419", # No empty doc strings
    "DTZ", # flake8-datetimez
    "E",  # pycodestyle errors
    "EXE", # flake8-executable
    "F",  # pyflakes
    "FLY", # flynt
    "I",  # isort
    "ICN",  # Use standard import names
    "ISC", # flake8-implicit-str-concat
    "N",  # pep8-naming
    "PERF", # perflint
    "PYI", # flake8-pyi
    "Q", # flake8-quotes
    "RET", # flake8-ret
    "RUF", # Ruff-specific rules
    "SIM", # flake8-simplify
    "SLF", # flake8-self
    "T10", # flake8-debugger
    "UP", # pyupgrade
    "W",  # pycodestyle warnings
]

[tool.ruff.lint.pycodestyle]
max-line-length = 118

[tool.setuptools_scm]
write_to = "datacube_alchemist/_version.py"
